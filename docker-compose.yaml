services:
  userservice:
    build:
      context: ./UserService
      dockerfile: Dockerfile
    ports:
      - "7207:8080"
    env_file:
      - .env

  productservice:
    build:
      context: ./PriceAggregationService
      dockerfile: Dockerfile
    ports:
      - "50051:50051"
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_healthy
  
  searchservice:
    build:
      context: ./SearchService 
      dockerfile: Dockerfile
    ports:
      - "5000:8000"
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_healthy
      
  rabbitmq:
    image: "rabbitmq:4-management"
    ports:
      - "5672:5672"  
      - "15672:15672" 
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 15s
      retries: 3
    environment:
      RABBITMQ_DEFAULT_USER: user  
      RABBITMQ_DEFAULT_PASS: password  
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  kong-db:
    image: postgres:13
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3
    ports:
      - "5432:5432"
    volumes:
      - kong_data:/var/lib/postgresql/data

  kong-migrations:
    image: kong:3.6
    command: kong migrations bootstrap
    depends_on:
      - kong-db
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    restart: on-failure

  kong:
    image: kong:3.6
    depends_on:
      - kong-migrations
      - userservice
      - productservice
      - searchservice
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:8443 http2 ssl
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002
    ports:
      - "8000:8000"
      - "8001:8001" 
      - "8002:8002"
      - "8443:8443"
    healthcheck:
      test: [ "CMD", "kong", "health" ]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure

  tyk-redis:
    image: redis:4.0-alpine
    container_name: tyk-redis
    ports:
      - "6379:6379"

  tyk-gateway:
    image: tykio/tyk-gateway:latest
    container_name: tyk-gateway
    ports:
      - "9000:8080" 
    depends_on:
      - tyk-redis
      - userservice
      - productservice
      - searchservice
    volumes:
      - ./tyk/tyk.conf:/opt/tyk-gateway/tyk.conf
      - ./tyk/apps:/opt/tyk-gateway/apps
    restart: on-failure

volumes:
  rabbitmq_data:
    driver: local
  kong_data:
    driver: local