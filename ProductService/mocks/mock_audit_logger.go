// Code generated by MockGen. DO NOT EDIT.
// Source: internal/kafka/audit_logger.go
//
// Generated by this command:
//
//	mockgen -source=internal/kafka/audit_logger.go -destination=mocks/mock_audit_logger.go -package=kafka
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	dtos "github.com/DavidBalazic/SmartShopperApp/internal/dtos"
	gomock "go.uber.org/mock/gomock"
)

// MockAuditLogger is a mock of AuditLogger interface.
type MockAuditLogger struct {
	ctrl     *gomock.Controller
	recorder *MockAuditLoggerMockRecorder
}

// MockAuditLoggerMockRecorder is the mock recorder for MockAuditLogger.
type MockAuditLoggerMockRecorder struct {
	mock *MockAuditLogger
}

// NewMockAuditLogger creates a new mock instance.
func NewMockAuditLogger(ctrl *gomock.Controller) *MockAuditLogger {
	mock := &MockAuditLogger{ctrl: ctrl}
	mock.recorder = &MockAuditLoggerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuditLogger) EXPECT() *MockAuditLoggerMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockAuditLogger) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockAuditLoggerMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockAuditLogger)(nil).Close))
}

// PublishAuditLog mocks base method.
func (m *MockAuditLogger) PublishAuditLog(ctx context.Context, logEntry dtos.AuditLog) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PublishAuditLog", ctx, logEntry)
	ret0, _ := ret[0].(error)
	return ret0
}

// PublishAuditLog indicates an expected call of PublishAuditLog.
func (mr *MockAuditLoggerMockRecorder) PublishAuditLog(ctx, logEntry any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PublishAuditLog", reflect.TypeOf((*MockAuditLogger)(nil).PublishAuditLog), ctx, logEntry)
}
